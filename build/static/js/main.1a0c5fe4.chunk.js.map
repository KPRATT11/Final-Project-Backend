{"version":3,"sources":["hooks/queryHooks.js","components/forms/NewCommunityForm.js","components/TopBar.js","lib/dateHelp.js","components/posts/PreviewPost.js","components/posts/PreviewPostContainer.js","components/forms/EditCommentForm.js","components/comments/Comment.js","components/comments/CommentSection.js","components/forms/NewCommentForm.js","components/forms/EditPostForm.js","components/posts/FocusedPost.js","components/forms/NewPostForm.js","components/views/CommunityView.js","components/community/CommunityPreview.js","components/community/SubscribedCommunities.js","components/community/ReccomenedCommunities.js","components/community/SearchedCommunities.js","components/views/AllCommunityOverview.js","App.js","index.js"],"names":["a","axios","get","data","useCurrentUser","console","log","useQuery","fetchCurrentUsers","community_id","usePosts","fetchPosts","staleTime","useSingleCommunity","fetchSingleCommunity","post_id","useSinglePost","fetchSinglePost","useSubscribedCommunities","fetchSubscribedCommunities","useReccomendedCommunities","fetchReccomendedCommunities","searchQuery","useSearchedCommunities","fetchSearchedCommunities","NewCommunityForm","props","useState","title","setTitle","sideBar","setSideBar","className","onChange","e","target","value","type","cols","rows","onClick","length","submitCommunity","TopBar","isUserLoading","isLoading","userData","isNewCommunityOpen","setIsNewCommunityOpen","refetchSubbedComms","refetch","sidebar","post","then","to","size","weight","color","logged_in","username","href","overlayClassName","onRequestClose","isOpen","formatDate","dateString","pastDate","Date","formattedDate","Math","floor","PreviewPost","details","handlePostClick","place","div","initial","scale","animate","transition","delay","duration","stiffness","id","userOwns","contentPreview","postedAt","PreviewPostContainer","useParams","comm_id","isPostsLoading","postsData","previewArray","sort","firstEl","secondEl","score","map","i","content","substring","posted_at","EditCommentForm","initialCommentValue","commentValue","setCommentValue","handleEdit","Comment","refetchPost","isEditOpen","setIsEditOpen","handleVote","is_like","hasUserVoted","submitVote","deleteVote","shouldRefetch","delete","for_post","target_id","result","err","deleteComment","response","x","mass","damping","submitted_at","style","backgroundColor","patch","CommentSection","width","margin","replies","b","NewCommentForm","setContent","submitNewReply","EditPostForm","initialTitle","initialContent","editPost","FocusedPost","postID","setBlank","isPostLoading","postData","postRefetch","postListRefetch","isReplyOpen","setIsReplyOpen","deletePost","y","author","NewPostForm","submitPost","CommunityView","isCommunityLoading","isCommunityError","isError","communityData","communityRefetch","postsRefetch","focusedPost","setFocusedPost","isCreatePostOpen","setIsCreatePostOpen","createNewFollow","deleteFollowing","user_following","display","gridTemplateColumns","targetPostID","community","CommunityPreview","commData","textDecoration","followers","SubscribedCommunities","isSubCommLoading","isSubCommError","subCommData","communities","comm","ReccomendedCommunities","isRecCommLoading","isRecCommError","recCommData","SearchedCommunities","currentSearchField","setCurrentSearchField","searchParam","setSearchParam","isSearchCommLoading","isSearchCommError","searchCommData","AllCommunityOverview","tab","setTab","handleTabSwitch","targetTab","disabled","renderSection","queryClient","QueryClient","App","client","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a0c5fe4.chunk.js","sourcesContent":["import { useQuery } from \"react-query\"\nimport axios from \"axios\"\n\nasync function fetchCurrentUsers(){\n    const {data} = await axios.get('/api/currentUser')\n    return data\n}\nexport function useCurrentUser(){\n    console.log('yeahhh')\n    return useQuery('user', () => fetchCurrentUsers())\n}\n\n\nasync function fetchPosts(community_id){\n    const {data} = await axios.get(`/api/allPostsOfCommunity?id=${community_id}`)\n    return data\n}\nexport function usePosts(community_id){\n    return useQuery('posts', () => fetchPosts(community_id), {\n        staleTime: 2000\n    })\n}\n\nasync function fetchSingleCommunity(community_id){\n    const {data} = await axios.get(`/api/community?id=${community_id}`)\n    return data\n}\nexport function useSingleCommunity(community_id){\n    return useQuery('singleCommunity', () => fetchSingleCommunity(community_id))\n}\n\nasync function fetchSinglePost(post_id){\n    if (post_id > 0){\n    const {data} = await axios.get(`/api/post?id=${post_id}`)\n    return data\n    }\n    else return\n}\nexport function useSinglePost(post_id){\n    return useQuery(['singlePost', post_id], () => fetchSinglePost(post_id), {\n        staleTime: 20000\n    })\n}\n\nasync function fetchSubscribedCommunities(){\n    const {data} = await axios.get(`/api/followedCommunities`)\n    return data\n}\nexport function useSubscribedCommunities(){\n    return useQuery('subscribedCommunities', () => fetchSubscribedCommunities())\n}\n\nasync function fetchReccomendedCommunities(){\n    const {data} = await axios.get('/api/reccomendedCommunities')\n    return data\n}\nexport function useReccomendedCommunities(){\n    return useQuery('reccomendedCommunities', () => fetchReccomendedCommunities())\n}\n\nasync function fetchSearchedCommunities(searchQuery){\n    const {data} = await axios.get(`/api/searchedCommunities?searchQuery=${searchQuery}`)\n    return data\n}\nexport function useSearchedCommunities(searchQuery){\n    return useQuery(['searchedCommunities', searchQuery], () => fetchSearchedCommunities(searchQuery))\n}","import React, { useState } from 'react'\n\nconst NewCommunityForm = (props) => {\n    const [title, setTitle] = useState('')\n    const [sideBar, setSideBar] = useState('')\n\n    const handleNewCommunitySubmit = () => {\n        if (title.length > 8 && sideBar.length > 8){\n            props.submitCommunity(title, sideBar)\n        }\n    }\n\n    const handleSideBarChange = (e) => {\n        setSideBar(e.target.value)\n    }\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    return ( \n        <div className=\"form\">\n            <h1>Create a new Community</h1>\n            <h2>Community Name</h2>\n            <input \n                className=\"form-input\"\n                onChange={handleTitleChange}\n                type=\"text\"\n                value={title}\n                />\n\n            <h2>Community Description</h2>\n            <textArea\n                cols={48}\n                rows={12}\n                className=\"form-input\"\n                onChange={handleSideBarChange}\n                value={sideBar}\n            >\n                {sideBar}\n            </textArea>\n            <button\n                className=\"submit\"\n                onClick={handleNewCommunitySubmit}\n            >Submit Community</button>\n        </div>\n     );\n}\n \nexport default NewCommunityForm;","import React, { useState } from 'react'\nimport { useCurrentUser } from './../hooks/queryHooks'\nimport { Link } from \"react-router-dom\"\nimport ReactModal from 'react-modal';\nimport axios from 'axios'\nimport NewCommunityForm from './forms/NewCommunityForm'\nimport { useSubscribedCommunities} from './../hooks/queryHooks'\nimport { House } from \"phosphor-react\";\n\nconst TopBar = () => {\n    const {isLoading: isUserLoading, data: userData} = useCurrentUser()\n    const [isNewCommunityOpen, setIsNewCommunityOpen] = useState(false)\n    const {refetch: refetchSubbedComms} = useSubscribedCommunities()\n    if (isUserLoading){\n        return <h1>Loading</h1>\n    }\n    console.log(userData)\n\n    const handleNewCommunityOpen = () => {\n        setIsNewCommunityOpen(true)\n    }\n\n    const handleSubmitNewCommunityRequest = (title, sidebar) => {\n        submitCommunity(title, sidebar)\n    }\n\n    const submitCommunity = (title, sidebar) => {\n        axios.post('/api/community', {\n            title,\n            sidebar\n        }).then(() => {\n            setIsNewCommunityOpen(false)\n            refetchSubbedComms()\n        })\n    }\n\n    const renderLogButtons = () => {\n        if (userData.logged_in) {\n            return <a className=\"log-button\" href=\"http://localhost:2000/logout\">logout</a>\n        }else {\n            return <a className=\"log-button\" href=\"http://localhost:2000/login\">login/signup</a>\n        }\n    }\n\n    return ( \n        <div className=\"bg-primary f-width top-bar\">\n            <button\n                className=\"top-bar-button round smooth-shadow-subtle\"\n                onClick={handleNewCommunityOpen}\n            >New Community</button>\n            <Link to=\"/\"><House className=\"top-bar-home\" size={78} weight=\"fill\" color=\"#ffffff\"/></Link>\n            <div>\n                <p\n                    className=\"top-bar-user\"\n                >Hello {userData.logged_in ? userData.username : 'Loading User'}</p>\n                {renderLogButtons()}\n            </div>\n            <ReactModal\n                overlayClassName=\"modal-overlay\"\n                className=\"modal smooth-shadow\"\n                onRequestClose={() => {setIsNewCommunityOpen(false)}}\n                isOpen={isNewCommunityOpen}\n            >\n                <NewCommunityForm \n                    submitCommunity={handleSubmitNewCommunityRequest}\n                />\n            </ReactModal>\n        </div>\n     );\n}\n \nexport default TopBar;","function formatDate(dateString) {\n    let pastDate = new Date(dateString)\n    let currentDate = new Date()\n    let formattedDate = (currentDate - pastDate) / 1000 / 60\n    if (formattedDate < 1){\n        return '< 1 min ago'\n    }\n    else if (formattedDate < 60) {\n        return (`${Math.floor(formattedDate)} mins ago`)\n    }\n    else if (formattedDate < (60 * 24)){\n        return (`${Math.floor(formattedDate / 60)} hours ago`)\n    }else {\n        return (`${Math.floor(formattedDate / 60 / 24)} days ago`)\n    }\n}\n\nexport default formatDate","import React from 'react';\nimport formatDate from './../../lib/dateHelp';\nimport { CrownSimple } from \"phosphor-react\";\nimport { motion } from \"framer-motion\"\n\nconst PreviewPost = ({details, handlePostClick, place}) => {\n    return ( \n        <motion.div \n        initial={{scale: 0}}\n        animate={{scale: 1}}\n        transition={{delay: 0.1 * place, duration: 0.1, stiffness: 500}}\n        className=\"preview-post round smooth-shadow-subtle\"\n        onClick={() => {handlePostClick(details.id)}}>\n            <p\n                className=\"preview-post-owns\"\n            >{details.userOwns && <CrownSimple size={28} color=\"#ffd900\" weight=\"fill\" />}</p>\n            <h2>{details.title}</h2>\n            <p>{details.contentPreview}</p>\n            <p>{formatDate(details.postedAt)}</p>\n        </motion.div>\n     );\n}\n \nexport default PreviewPost;","import React from 'react';\nimport { useParams } from \"react-router-dom\"\nimport { usePosts } from './../../hooks/queryHooks'\n\nimport PreviewPost from './PreviewPost'\n\n\nconst PreviewPostContainer = (props) => {\n    const { comm_id } = useParams()\n    const { isLoading: isPostsLoading, data: postsData} = usePosts(comm_id)\n    console.log(postsData)\n\n    if (isPostsLoading) return <h1>Loading</h1>\n\n    const previewContent = (content) => {\n        if (content.length < 40){\n            return content\n        }\n        return `${content.substring(0, 37)}...`\n    }\n\n    const generatePreviews = (previewArray) => {\n        return previewArray\n        .sort((firstEl, secondEl) => secondEl.score - firstEl.score)\n        .map((e,i) => {\n            return <PreviewPost \n                handlePostClick={props.handlePostClick}\n                place={i}\n                key={e.id}\n                details={{\n                    contentPreview: previewContent(e.content),\n                    userOwns: e.userOwns,\n                    title: e.title,\n                    id: e.id,\n                    score: e.score,\n                    postedAt: e.posted_at\n                }}\n            />\n        })\n    }\n\n    return ( \n        <div className=\"preview-post-container\">\n            {generatePreviews(postsData)}\n        </div>\n     );\n}\n \nexport default PreviewPostContainer;","import React, { useState } from 'react'\n\nconst EditCommentForm = (props) => {\n    const [commentValue, setCommentValue] = useState(props.initialCommentValue)\n\n\n    const handleCommentChange = (e) => {\n        setCommentValue(e.target.value)\n    }\n\n    const handleCommentSubmit = () => {\n        if (commentValue.length > 8){\n            props.handleEdit(commentValue)\n        }\n    }\n\n    return ( \n        <div className=\"form\">\n            <textArea \n                cols={48}\n                rows={12}\n                className=\"form-input\"\n                onChange={handleCommentChange}\n                value={commentValue}\n            >\n                {commentValue}\n            </textArea>\n            <button\n                className=\"submit\"\n                onClick={() => handleCommentSubmit()}\n            >EDIT</button>\n        </div>\n     );\n}\n \nexport default EditCommentForm;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport EditCommentForm from './../forms/EditCommentForm'\nimport formatDate from './../../lib/dateHelp';\nimport { ArrowUp, ArrowDown, Trash, Pencil } from \"phosphor-react\";\nimport { motion } from \"framer-motion\"\n\nconst Comment = ({data, refetchPost, logged_in, place}) => {\n    const [isEditOpen, setIsEditOpen] = useState(false)\n\n    const handleVote = (is_like) => {\n        if (data.hasUserVoted === \"false\"){\n            submitVote(is_like)\n        }\n        else if(data.hasUserVoted.is_like === is_like){\n            deleteVote(true)\n        }\n        else if(data.hasUserVoted.is_like !== is_like){\n            deleteVote(false)\n            submitVote(is_like)\n        }\n    }\n\n    const deleteVote = (shouldRefetch) => {\n        axios.delete('/api/vote', {\n            data: {\n                for_post: false,\n                target_id: data.id\n            }\n        }).then(() => {\n            if (shouldRefetch){\n                refetchPost()\n            }\n        })\n    }\n\n    const submitVote = (is_like) => {\n        axios.post('/api/vote', {\n            is_like,\n            for_post: false,\n            target_id: data.id\n        }).then((result, err) => {\n            refetchPost()\n        })\n    }\n\n    const handleDeleteRequest = () => {\n        deleteComment()\n    }\n\n    const deleteComment = () => {\n        axios.delete(`/api/comment?id=${data.id}`).then((response) => {\n            refetchPost()\n        })\n    }\n\n    const handleEditOpen = () => {\n        setIsEditOpen('true')\n    }\n\n    const handleEditRequest = (content) => {\n        axios.patch(`/api/comment`, {\n            id: data.id,\n            content\n        }).then(() => {\n            setIsEditOpen(false)\n            refetchPost()\n        })\n    }\n\n    return ( \n        <motion.div\n            initial={{x: 850}}\n            animate={{x: 0}}\n            transition={{type: 'spring', delay: 0.1 * place, stiffness: 200, mass: 2, damping: 30}}\n            className=\"comment round smooth-shadow-small\"\n        >   \n            <div className=\"comment-info-container\">\n                <p className=\"comment-author\">By {data.username}</p>\n                <p className=\"comment-date\">{formatDate(data.submitted_at)}</p> \n            </div>\n            <p className=\"comment-content\">{data.content}</p>\n\n            <div className=\"comment-function-buttons\">\n            {logged_in && \n                <div>\n                    <button\n                        className={\"vote-button-comment\"}\n                        onClick={() => {handleVote(true)}}\n                        style={{backgroundColor: data.hasUserVoted.is_like === true ? '#F24236' : '#F8938C'}}\n                    ><ArrowUp color=\"#ffffff\" size={24} weight=\"fill\" /></button>\n                    <button\n                        className={\"vote-button-comment\"}\n                        onClick={() => {handleVote(false)}}\n                        style={{backgroundColor: data.hasUserVoted.is_like === false ? '#2E86AB' : '#5EB1D4'}}\n                    ><ArrowDown color=\"#ffffff\" size={24} weight=\"fill\" /></button>\n                </div>\n            }\n\n                <div>\n                {data.userOwns && <button\n                    className=\"post-top-function-button\"\n                    onClick={() => {handleEditOpen()}}\n                ><Pencil size={22} color=\"#eeeeec\" weight=\"fill\" /></button>}\n\n                {data.userOwns && <button\n                    className=\"post-top-function-button\"\n                    onClick={() => {handleDeleteRequest()}}\n                ><Trash size={22} color=\"#eeeeec\" weight=\"fill\" /></button>}\n                </div>\n            </div>\n\n            <ReactModal\n                overlayClassName=\"modal-overlay\"\n                className=\"modal smooth-shadow\"\n                isOpen={isEditOpen}\n                onRequestClose={() => {setIsEditOpen(false)}}\n            > \n                <EditCommentForm \n                    handleEdit = {handleEditRequest}\n                    initialCommentValue={data.content}\n                />\n            </ReactModal>\n\n        </motion.div>\n     );\n}\n \nexport default Comment;","import React from 'react';\nimport Comment from './Comment'\n\nconst CommentSection = (props) => {\n    const generateComments = (data) => {\n        return data\n        .sort((a, b) => b.score - a.score)\n        .map((e, i) => {\n            return <Comment \n                place={i}\n                key={e.id}\n                logged_in={props.logged_in}\n                refetchPost={props.refetchPost}\n                data={e}/>\n        })\n    }\n\n    return ( \n        <div style={{\n            width: \"90%\",\n            margin: \"auto\"\n        }}>\n            {generateComments(props.replies)}\n        </div>\n     );\n}\n \nexport default CommentSection;","import React, { useState } from 'react'\n\nconst NewCommentForm = (props) => {\n    const [content, setContent] = useState('')\n\n    const handleContentChange = (e) => {\n        setContent(e.target.value)\n    }\n\n    const handleCommentSubmit = () => {\n        if (content.length > 8){\n            props.submitNewReply(content)\n        }\n    }\n\n    return ( \n        <div className=\"form\">\n            <h1>Reply</h1>\n            <h2>Content</h2>\n            <textArea\n                cols={48}\n                rows={12}\n                className=\"form-input\"\n                onChange={handleContentChange}\n                value={content}\n            ></textArea>\n            <button\n                className=\"submit\"\n               onClick={handleCommentSubmit} \n            >REPLY</button>\n        </div>\n     );\n}\n \nexport default NewCommentForm;","import React, { useState } from 'react'\n\nconst EditPostForm = (props) => {\n    const [title, setTitle] = useState(props.initialTitle)\n    const [content, setContent] = useState(props.initialContent)\n\n    const handlePostEdit = () => {\n        if (title.length > 8 && content.length > 8){\n            props.editPost(title, content)\n        }\n    }\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleContentChange = (e) => {\n        setContent(e.target.value)\n    }\n\n    return ( \n        <div>\n            <input\n                onChange={handleTitleChange} \n                value={title} \n                type=\"text\" />\n            <textArea\n                onChange={handleContentChange}\n                value={content}\n            >\n                {content}\n            </textArea>\n            <button\n                onClick={handlePostEdit}\n            >EDIT</button>\n        </div>\n     );\n}\n \nexport default EditPostForm;","import React, {useState} from 'react';\nimport ReactModal from 'react-modal';\nimport CommentSection from './../comments/CommentSection'\nimport { useParams } from \"react-router-dom\"\nimport { useSinglePost, usePosts } from './../../hooks/queryHooks'\nimport NewCommentForm from './../forms/NewCommentForm'\nimport EditPostForm from './../forms/EditPostForm'\nimport formatDate from './../../lib/dateHelp';\nimport axios from 'axios';\nimport { ArrowUp, ArrowDown, Trash, Pencil, ChatDots } from \"phosphor-react\";\nimport { motion } from \"framer-motion\"\n\nconst FocusedPost = ({postID, setBlank}) => {\n    const { comm_id } = useParams()\n    const {isLoading: isPostLoading, data: postData, refetch: postRefetch} = useSinglePost(postID)\n    const {refetch: postListRefetch} = usePosts(comm_id)\n\n    const [isReplyOpen, setIsReplyOpen] = useState(false)\n    const [isEditOpen, setIsEditOpen] = useState(false)\n\n    \n    if (postID === '') return <h1>Select A Post</h1>\n    if (isPostLoading) return <h1>Loading</h1> \n    \n    const handleOpenReply = () => {\n        setIsReplyOpen(true)\n    }\n\n    const handleOpenEdit =() => {\n        setIsEditOpen(true)\n    }\n\n    const submitNewReply = (content) => {\n        axios.post('/api/comment', {\n            content,\n            target_id: postID\n        }).then(() => {\n            setIsReplyOpen(false)\n            postRefetch()\n\n        })\n    }\n\n    \n    const handleVote = (is_like) => {\n        if (postData.hasUserVoted === \"false\"){\n            submitVote(is_like)\n        }\n        else if(postData.hasUserVoted.is_like === is_like){\n            deleteVote(true)\n        }\n        else if(postData.hasUserVoted.is_like !== is_like){\n            deleteVote(false)\n            submitVote(is_like)\n        }\n    }\n\n    const deleteVote = (shouldRefetch) => {\n        axios.delete('/api/vote', {\n            data: {\n                for_post: true,\n                target_id: postID\n            }\n        }).then(() => {\n            if (shouldRefetch){\n                postRefetch()\n            }\n        })\n    }\n\n    const submitVote = (is_like) => {\n        axios.post('/api/vote', {\n            is_like,\n            for_post: true,\n            target_id: postID\n        }).then((result, err) => {\n            postRefetch()\n        })\n    }\n\n    const handleDeleteRequest = () => {\n        deletePost()\n    }\n\n    const deletePost = () => {\n        axios.delete(`/api/post?id=${postID}`).then((response) => {\n            setBlank()\n            postRefetch()\n            postListRefetch()\n        })\n    }\n\n    const handleEditRequest = (title, content) => {\n        editPost(title, content)  \n    }\n\n    const editPost = (title, content) => {\n        axios.patch(`/api/post`, {\n            id: postID,\n            title,\n            content\n        }).then(() => {\n            setIsEditOpen(false)\n            postRefetch()\n        })\n    }\n\n    return ( \n        <div className=\"focused-post-container \">\n            <motion.div \n            initial={{y:6350, scale: 0}}\n            animate={{y: 0, scale: 1}}\n            transition={{ type: 'spring', damping: 30, stiffness: 300}}\n            className=\"focused-post round smooth-shadow-small scale-in-top\">\n                {postData.userOwns && <button\n                    className=\"post-top-function-button\"\n                    onClick={() => handleOpenEdit()}\n                ><Pencil size={22} color=\"#eeeeec\" weight=\"fill\" /></button>}\n                {postData.userOwns && <button\n                    className=\"post-top-function-button\"\n                    onClick={() => handleDeleteRequest()}\n                ><Trash size={22} color=\"#eeeeec\" weight=\"fill\" /></button>}\n\n                <p className=\"post-date\">{formatDate(postData.posted_at)}</p>\n                <h2 className=\"post-title\">{postData.title}</h2>\n                <p className=\"post-content\">{postData.content}</p>\n                {postData.logged_in && \n                    <div className={\"button-container\"}>\n                        <button\n                            className=\"vote-button\"\n                            onClick={() => {handleVote(true)}} \n                            style={{backgroundColor: postData.hasUserVoted.is_like === true ? '#F24236' : '#F8938C'}}\n                            ><ArrowUp color=\"#ffffff\" size={34} weight=\"fill\" /></button>\n                        <button \n                            className=\"vote-button\"\n                            onClick={() => {handleVote(false)}}\n                            style={{backgroundColor: postData.hasUserVoted.is_like === false ? '#2E86AB' : '#5EB1D4'}}\n                            ><ArrowDown color=\"#ffffff\" size={34} weight=\"fill\" /></button>\n                                        <button\n                        className=\"post-function-button\"\n                        onClick={handleOpenReply}\n                        ><ChatDots size={28} color=\"#eeeeec\" weight=\"fill\" /></button>\n\n                    <p\n                        className=\"post-author\"\n                    >By {postData.author.username}</p>\n                    </div>\n                }\n            </motion.div>\n\n            <div className=\"comment-section\">\n                <CommentSection \n                    logged_in={postData.logged_in}\n                    refetchPost={postRefetch}\n                    replies={postData.replies}/>\n            </div>\n            <ReactModal\n                overlayClassName=\"modal-overlay\"\n                className=\"modal smooth-shadow\"\n                id={\"id\"}\n                isOpen={isReplyOpen}\n                onRequestClose={() => {setIsReplyOpen(false)}}\n            >\n                <NewCommentForm \n                    submitNewReply={submitNewReply}\n                />\n            </ReactModal>\n\n            <ReactModal\n                overlayClassName=\"modal-overlay\"\n                className=\"modal smooth-shadow\"\n                isOpen={isEditOpen}\n                onRequestClose={() => {setIsEditOpen(false)}}\n            >\n                <EditPostForm \n                    initialTitle={postData.title}\n                    initialContent={postData.content}\n                    editPost={handleEditRequest}\n                />\n            </ReactModal>\n        </div>\n     );\n}\n \nexport default FocusedPost;","import React, { useState } from 'react'\n\nconst NewPostForm = (props) => {\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n\n    const handlePostSubmit = () => {\n        if (title.length > 8 && content.length > 8){\n            props.submitPost(title, content)\n        }\n    }\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleContentChange = (e) => {\n        setContent(e.target.value)\n    }\n\n    return ( \n        <div className=\"form\">\n            <h1>New Post</h1>\n            <h2>Title</h2>\n            <input \n                className=\"form-input\"\n                type=\"text\" \n                value={title}\n                onChange={handleTitleChange}    \n            />\n            <h2>Content</h2>\n            <textArea\n                cols={48}\n                rows={12}\n                className=\"form-input\"\n                value={content}\n                onChange={handleContentChange}\n            ></textArea>\n            <button\n                className=\"submit\"\n                onClick={handlePostSubmit}\n            >POST</button>\n        </div>\n     );\n}\n \nexport default NewPostForm;","import React, { useState} from 'react';\nimport { useParams} from \"react-router-dom\"\nimport {useSingleCommunity, usePosts } from \"./../../hooks/queryHooks\"\nimport ReactModal from 'react-modal';\nimport PreviewPostContainer from \"./../posts/PreviewPostContainer\"\nimport FocusedPost from \"./../posts/FocusedPost\"\nimport NewPostForm from \"./../forms/NewPostForm\"\nimport axios from \"axios\"\nimport \"./communityBar.css\"\n\nconst CommunityView = () => {\n    const { comm_id } = useParams()\n    const {isLoading: isCommunityLoading, isError: isCommunityError, data: communityData, refetch: communityRefetch} = useSingleCommunity(comm_id)\n    \n    console.log(communityData)\n\n    const {refetch: postsRefetch} = usePosts(comm_id)\n\n    const [focusedPost, setFocusedPost] = useState('')\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false)\n\n    if (isCommunityLoading) return <h1>Community Loading</h1>\n    if (isCommunityError) return <h1>Error Loading Community</h1>\n\n    const handlePostClick = (targetPostID) => {\n        setFocusedPost(targetPostID)\n    }\n\n    const handleOpenCreateNewPost = () => {\n        setIsCreatePostOpen(true)\n    }\n\n    const submitNewPost = (title, content) => {\n        axios.post('/api/post', {\n            title: title,\n            content: content,\n            community: comm_id\n        }).then((response) => {\n            postsRefetch()\n        })\n        setIsCreatePostOpen(false)\n    }\n\n    const setBlankFocusedPost = () => {\n        setFocusedPost('')\n    }\n\n    const handleFollowChangeRequest = () => {\n        if (communityData.user_following){\n            deleteFollowing()\n        }else{\n            createNewFollow()\n        }\n    }\n\n    const createNewFollow = () => {\n        axios.post(`/api/follow?target_id=${comm_id}`).then(() => {\n            communityRefetch()\n        })\n    }\n\n    const deleteFollowing = () => {\n        axios.delete(`/api/follow?target_id=${comm_id}`).then(() => {\n            communityRefetch()\n        })\n    }\n\n    const getCommButtonClassName= () => {\n        if (!communityData.user_following){\n            return `comm-button smooth-shadow-subtle round`\n        }else {\n            return `comm-button smooth-shadow-subtle round comm-button-subtle`\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"comm-header f-width bg-comm\">\n                {communityData.logged_in ? \n                    <button\n                        className={getCommButtonClassName()}\n                        onClick={handleFollowChangeRequest}\n                    >{communityData.user_following ? 'Unfollow' : 'Follow'}</button> :\n                    <p></p>\n                }\n                <h1\n                    className=\"comm-title\"\n                >{communityData.title}</h1>\n\n                {communityData.logged_in && \n                    <button\n                        className=\"comm-button smooth-shadow-subtle round\"\n                        onClick={handleOpenCreateNewPost}\n                    >Create Post</button>\n                }\n            </div>\n            <div style={{\n                display: \"grid\",\n                gridTemplateColumns: \"1fr 1fr\"\n            }}>\n                <PreviewPostContainer handlePostClick={handlePostClick} />\n                <FocusedPost\n                    key={focusedPost} \n                    setBlank={setBlankFocusedPost}\n                    postID={focusedPost}/>\n            </div>\n            <ReactModal\n                overlayClassName=\"modal-overlay\"\n                className=\"modal smooth-shadow\"\n                isOpen={isCreatePostOpen}\n                onRequestClose={() => {setIsCreatePostOpen(false)}}\n            >\n                <NewPostForm \n                    submitPost={submitNewPost} \n                />    \n            </ReactModal>\n        </div> \n\n     );\n}\n \nexport default CommunityView;","import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { motion } from \"framer-motion\"\n\nconst CommunityPreview = ({commData, place}) => {\n    const previewContent = (content) => {\n        if (content.length < 40){\n            return content\n        }\n        return `${content.substring(0, 37)}...`\n    }\n\n    return ( \n        <Link \n        style={{textDecoration: 'none'}}\n        to={`/community/${commData.id}`}>\n            <motion.div \n                initial={{scale: 0}}\n                animate={{scale: 1.0}}\n                transition={{duration: 0.1}}\n                className=\"comm-preview smooth-shadow-small round\">\n                <h2>{commData.title}</h2>\n                <p>{previewContent(commData.sidebar)}</p>\n                <p className=\"comm-preview-followers\">{commData.followers} Followers</p>\n            </motion.div>\n        </Link>\n     );\n}\n \nexport default CommunityPreview;","import React from 'react';\nimport { useSubscribedCommunities } from './../../hooks/queryHooks'\nimport CommunityPreview from './CommunityPreview'\nconst SubscribedCommunities = () => {\n    const {isLoading: isSubCommLoading, isError: isSubCommError, data: subCommData} = useSubscribedCommunities()\n\n    console.log(subCommData)\n\n    if (isSubCommLoading) return <h1>Loading</h1>\n    if (isSubCommError) return <h1>Error Loading Communities</h1>\n\n    const renderCommunities = () => {\n        if (subCommData.logged_in){\n            return subCommData.communities.map(comm => {\n                return(\n                <CommunityPreview \n                    key={comm.id}\n                    commData={comm}\n                />\n                )\n            })\n        }\n        else {\n            return <h1>\n                Log in to see your subscribed Communities\n            </h1>\n        }\n    }\n\n    return ( \n        <div className=\"comm-container\">\n            {renderCommunities()}\n        </div>\n    );\n}\n \nexport default SubscribedCommunities;","import React from 'react';\nimport { useReccomendedCommunities } from './../../hooks/queryHooks'\nimport CommunityPreview from './CommunityPreview'\n\nconst ReccomendedCommunities = () => {\n\n    const {isLoading: isRecCommLoading, isError: isRecCommError, data: recCommData} = useReccomendedCommunities()\n\n    if (isRecCommLoading) return <h1>Loading</h1>\n    if (isRecCommError) return <h1>Error Loading Communities</h1>\n\n    const renderCommunities = () => {\n        return recCommData.map((comm, i) => {\n            return(\n            <CommunityPreview \n                place={i}\n                key={comm.id}\n                commData={comm}\n            />\n            )\n        })\n    }\n\n    return ( \n        <div className=\"comm-container\">\n            {renderCommunities()}\n        </div>\n    );\n}\n \nexport default ReccomendedCommunities;","import React, {useState} from 'react';\nimport { useSearchedCommunities } from './../../hooks/queryHooks'\nimport CommunityPreview from './CommunityPreview'\nimport { MagnifyingGlass } from \"phosphor-react\";\n\nconst SearchedCommunities = () => {\n    const [currentSearchField, setCurrentSearchField] = useState('')\n    const [searchParam, setSearchParam] = useState('') //set this to the current search feild on actual search\n\n    const {isLoading: isSearchCommLoading, isError: isSearchCommError, data: searchCommData} = useSearchedCommunities(searchParam)\n    \n    if (isSearchCommLoading) return <h1>Loading</h1>\n    if (isSearchCommError) return <h1>Error Loading Communities</h1>\n\n    const handleSearchChange = (e) => {\n        setCurrentSearchField(e.target.value)\n    }\n\n    const submitSearch = () => {\n        if (currentSearchField.length > 2){\n            setSearchParam(currentSearchField)\n        }\n    }\n\n    const renderCommunities = () => {\n        return searchCommData.map(comm => {\n            return(\n            <CommunityPreview \n                key={comm.id}\n                commData={comm}\n            />\n            )\n        })\n    }\n\n    return ( \n        <div>\n            <input \n                className=\"comm-search-bar\"\n                onChange={handleSearchChange}\n                value={currentSearchField}\n                type=\"text\" />\n            <button\n                className=\"comm-search-button\"\n                onClick={submitSearch}\n            ><MagnifyingGlass size={28} color=\"#ffffff\" weight=\"bold\" /></button>\n            <div className=\"comm-container\">\n                {renderCommunities()}\n            </div>\n        </div>\n     );\n}\n \nexport default SearchedCommunities;","import React, { useState } from 'react';\nimport SubscribedCommunities from './../community/SubscribedCommunities'\nimport ReccomendedCommunities from './../community/ReccomenedCommunities'\nimport SearchedCommunities from './../community/SearchedCommunities'\n\nconst AllCommunityOverview = () => {\n    const [tab, setTab] = useState('sub')\n\n    const renderSection = () => {\n        switch (tab) {\n            case 'sub':\n                return <SubscribedCommunities />\n            case 'rec':\n                return <ReccomendedCommunities />\n            case 'src':\n                return <SearchedCommunities />\n            default: return <h1>Error</h1>\n        }\n    }\n\n    const handleTabSwitch = (targetTab) => {\n        setTab(targetTab)\n    }\n\n    return ( \n        <div>\n\n\n            <div className=\"f-width tab-container\">\n                <button\n                    className=\"tab\"\n                    onClick={() => {handleTabSwitch('sub')}}\n                    disabled={tab === 'sub'}\n                >Subbed</button>\n                <button\n                    className=\"tab\"\n                    onClick={() => {handleTabSwitch('rec')}}\n                    disabled={tab === 'rec'}\n                >Recommended</button>\n                <button\n                    className=\"tab\"\n                    onClick={() => {handleTabSwitch('src')}}\n                    disabled={tab === 'src'}\n                >Search</button>\n            </div>\n            {renderSection()}\n        </div>\n     );\n}\n \nexport default AllCommunityOverview;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from 'react-query'\nimport TopBar from \"./components/TopBar\"\nimport CommunityView from './components/views/CommunityView'\nimport AllCommunityOverview from './components/views/AllCommunityOverview'\nimport { motion } from \"framer-motion\"\n\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QueryClientProvider client={queryClient}>\n        <Router>\n        <TopBar />\n          <Switch>\n            <Route path=\"/community/:comm_id\">\n              <CommunityView />\n            </Route>\n            <Route>\n              <AllCommunityOverview path=\"/\" />\n            </Route>\n          </Switch>\n        </Router>\n      </QueryClientProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}